webpackJsonp([1],{"3BLa":function(e,t,n){(e.exports=n("FZ+f")(!1)).push([e.i,"p{margin-top:30px}.li-default{padding-bottom:10px}.figure{font-size:14px}",""])},"5axn":function(e,t,n){"use strict";var s=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("a",{attrs:{href:"https://travis-ci.com/VSS-SDK/"+e.project,target:"_blank"}},[n("span",{staticStyle:{"margin-left":"8px"}},[n("img",{attrs:{src:"https://travis-ci.com/VSS-SDK/"+e.project+".svg?branch=master"}})])]),n("a",{attrs:{href:"https://github.com/VSS-SDK/"+e.project+"/graphs/contributors",target:"_blank"}},[n("span",{staticStyle:{"margin-left":"8px"}},[n("img",{attrs:{src:"https://img.shields.io/github/contributors/VSS-SDK/"+e.project+".svg?style=social&label=Contributors"}})])]),n("a",{attrs:{href:"https://github.com/VSS-SDK/"+e.project+"/stargazers",target:"_blank"}},[n("span",{staticStyle:{"margin-left":"8px"}},[n("img",{attrs:{src:"https://img.shields.io/github/stars/VSS-SDK/"+e.project+".svg?style=social&label=Stars"}})])]),n("a",{attrs:{href:"https://github.com/VSS-SDK/"+e.project+"/fork",target:"_blank"}},[n("span",{staticStyle:{"margin-left":"8px"}},[n("img",{attrs:{src:"https://img.shields.io/github/forks/VSS-SDK/"+e.project+".svg?style=social&label=Forks"}})])]),n("a",{attrs:{href:"https://github.com/VSS-SDK/"+e.project+"/issues",target:"_blank"}},[n("span",{staticStyle:{"margin-left":"8px"}},[n("img",{attrs:{src:"https://img.shields.io/github/issues/VSS-SDK/"+e.project+".svg?style=social&label=Issues"}})])])])};s._withStripped=!0;var l={render:s,staticRenderFns:[]};t.a=l},"6stf":function(e,t,n){var s=n("zzPi");"string"==typeof s&&(s=[[e.i,s,""]]),s.locals&&(e.exports=s.locals);n("rjj0")("257ba647",s,!1,{sourceMap:!1})},"9DPk":function(e,t,n){"use strict";t.a={props:["project"],data:function(){return{}}}},AujS:function(e,t,n){"use strict";var s=n("9DPk"),l=n("5axn"),i=!1;var a=function(e){i||n("JIT3")},d=n("VU/8")(s.a,l.a,!1,a,null,null);d.options.__file="components/GithubBadges.vue",t.a=d.exports},Beoq:function(e,t,n){"use strict";t.a={data:function(){return{menu:[{id:"",label:"Visão geral",link:"/",menu:[{id:"A.",label:"Instalação",link:"/doc-overview-install"},{id:"B.",label:"Utilização",link:"/doc-overview-use"},{id:"C.",label:"Desenvolvimento",link:"/doc-overview-dev"}]},{id:"1.",label:"VSS-Core",link:"/doc-core",menu:[{id:"1.1.",label:"Domínio",link:"/doc-core-domain",menu:[{id:"1.1.1.",label:"Constantes",link:"/doc-core-domain-constants"},{id:"1.1.2.",label:"Enums",link:"/doc-core-domain-enums-cpp"},{id:"1.1.3.",label:"Modelos básicos",link:"/doc-core-domain-simple-models"},{id:"1.1.4.",label:"Modelos de comunicação",link:"doc-core-domain-communication-models"}]},{id:"1.2.",label:"Interfaces de comunicação",link:"/doc-core-coomunication-interfaces"},{id:"1.3.",label:"Arquivos protos",link:"/doc-core-protos"}]},{id:"2.",label:"VSS-Samples",link:"/doc-samples",menu:[{id:"2.1.",label:"C++",link:"/doc-samples-cpp"},{id:"2.2.",label:"Rust",link:"/doc-samples-rust"}]},{id:"3.",label:"VSS-Simulator",link:"/doc-simulator",menu:[{id:"3.1.",label:"Enviando comandos",link:"/doc-simulator-send-commands"},{id:"3.2.",label:"Obtendo estados",link:"/doc-simulator-get-states"}]},{id:"4.",label:"VSS-Viewer",link:"",menu:[{id:"4.1.",label:"Enviando Debug",link:""},{id:"4.2.",label:"Pausando partidas",link:""},{id:"4.3.",label:"Manipulando objetos em campo",link:""},{id:"4.4.",label:"Alterando câmeras",link:""}]},{id:"5.",label:"VSS-Joystick",link:"",menu:[{id:"5.1.",label:"Controlando robôs no VSS-Simulator",link:""}]},{id:"6.",label:"VSS-Vision",link:"",menu:[{id:"6.1.",label:"Rotina de calibragem",link:"",menu:[{id:"6.1.1.",label:"Calibrando cores",link:""},{id:"6.1.2.",label:"Calibração rotação",link:""},{id:"6.1.3.",label:"Calibrando corte",link:""},{id:"6.1.4.",label:"Salvando calibragem",link:""},{id:"6.1.5.",label:"Carregando calibragem",link:""}]},{id:"6.2.",label:"Rotina de jogo",link:"",menu:[{id:"6.2.1.",label:"Carregando calibragem",link:""},{id:"6.2.2.",label:"Iniciando processamento",link:""}]},{id:"6.3.",label:"Obtendo estados",link:""}]}]}}}},JIT3:function(e,t,n){var s=n("fVjO");"string"==typeof s&&(s=[[e.i,s,""]]),s.locals&&(e.exports=s.locals);n("rjj0")("514f32d0",s,!1,{sourceMap:!1})},Jo5z:function(e,t,n){"use strict";var s=function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("div",{staticClass:"sidenav"},[t("left-bar")],1),t("div",{staticClass:"main"},[t("div",{staticClass:"container"},[t("Title"),t("LanguageBreadcrumb",{attrs:{languageProp:this.languageProp}}),t("div",{staticClass:"row"},[t("div",{staticClass:"col-sm-10 offset-sm-1",staticStyle:{color:"#444",padding:"20px 20px 20px 20px"}},[t("h2",{staticStyle:{"margin-bottom":"30px"}},[this._v("\n            "+this._s(this.project)+"\n            "),t("GithubBadges",{attrs:{project:this.project}})],1),t("div",{domProps:{innerHTML:this._s(this.constants)}})])])],1)])])};s._withStripped=!0;var l={render:s,staticRenderFns:[]};t.a=l},"RV+5":function(e,t,n){"use strict";t.a={props:["languageProp"],data:function(){return{}}}},U1lO:function(e,t,n){"use strict";var s=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"row"},[void 0!==e.languageProp&&e.languageProp.hasLanguages?n("div",{staticClass:"col-sm-12",attrs:{div:""}},[n("nav",{attrs:{"aria-label":"breadcrumb"}},[n("ol",{staticClass:"breadcrumb"},e._l(e.languageProp.items,function(t){return n("li",{key:t.text,staticClass:"breadcrumb-item"},[void 0!==t.href?n("nuxt-link",{attrs:{to:t.href}},[e._v(e._s(t.text))]):n("span",{staticStyle:{color:"#777"}},[e._v(e._s(t.text))])],1)}))])]):e._e()])};s._withStripped=!0;var l={render:s,staticRenderFns:[]};t.a=l},UqTQ:function(e,t,n){var s=n("3BLa");"string"==typeof s&&(s=[[e.i,s,""]]),s.locals&&(e.exports=s.locals);n("rjj0")("08ce257a",s,!1,{sourceMap:!1})},XN39:function(e,t,n){"use strict";var s=n("cg/V"),l=n("duXM"),i=!1;var a=function(e){i||n("jWMY")},d=n("VU/8")(s.a,l.a,!1,a,null,null);d.options.__file="components/Title.vue",t.a=d.exports},a9Wq:function(e,t,n){"use strict";var s=n("RV+5"),l=n("U1lO"),i=!1;var a=function(e){i||n("6stf")},d=n("VU/8")(s.a,l.a,!1,a,null,null);d.options.__file="components/LanguageBreadcrumb.vue",t.a=d.exports},"cg/V":function(e,t,n){"use strict";t.a={data:function(){return{}}}},dhgJ:function(e,t,n){(e.exports=n("FZ+f")(!1)).push([e.i,"",""])},duXM:function(e,t,n){"use strict";var s=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"row"},[t("div",{staticClass:"col-sm-4 offset-sm-4"},[t("center",{staticStyle:{"font-size":"22px",padding:"10px 10px 10px 10px",color:"#ccc"}},[this._v("VSS-SDK")])],1)])};s._withStripped=!0;var l={render:s,staticRenderFns:[]};t.a=l},fVjO:function(e,t,n){(e.exports=n("FZ+f")(!1)).push([e.i,"",""])},gfdU:function(e,t,n){var s=n("mROm");"string"==typeof s&&(s=[[e.i,s,""]]),s.locals&&(e.exports=s.locals);n("rjj0")("d2149b62",s,!1,{sourceMap:!1})},jWMY:function(e,t,n){var s=n("dhgJ");"string"==typeof s&&(s=[[e.i,s,""]]),s.locals&&(e.exports=s.locals);n("rjj0")("2c9d3aac",s,!1,{sourceMap:!1})},mROm:function(e,t,n){(e.exports=n("FZ+f")(!1)).push([e.i,"b>a,ul>a{color:#444}.li-without-dot{list-style-type:none;padding-bottom:2px;padding-left:8px}ul{padding:0;margin:0}.sidenav{height:100%;width:280px;position:fixed;z-index:1;top:0;left:0;background-color:#f8f8f8;overflow-x:hidden;overflow-y:scroll;padding-top:10px}.sidenav ul{padding:3px 0 3px 8px;text-decoration:none;display:block;font-size:14px;color:#333}.sidenav ul:hover{color:#428bca;cursor:pointer}.main{margin-left:280px;padding:0 10px}@media screen and (max-height:450px){.sidenav{padding-top:15px}.sidenav a{font-size:18px}}",""])},p0RR:function(e,t,n){"use strict";var s=n("Beoq"),l=n("vyvD"),i=!1;var a=function(e){i||n("gfdU")},d=n("VU/8")(s.a,l.a,!1,a,null,null);d.options.__file="components/LeftBar.vue",t.a=d.exports},sB8e:function(e,t,n){"use strict";var s=n("AujS"),l=n("p0RR"),i=n("XN39"),a=n("a9Wq");t.a={components:{LeftBar:l.a,Title:i.a,GithubBadges:s.a,LanguageBreadcrumb:a.a},data:function(){return{project:"VSS-SampleCpp",languageProp:{hasLanguages:!0,items:[{text:"C++",active:!0},{text:"Rust",href:"/doc-samples-rust"}]},constants:""}},created:function(){this.loadConstants()},methods:{loadConstants:function(){this.constants+='<link rel="stylesheet" href="https://assets-cdn.github.com/assets/gist-embed-87673c31a5b37b5e6556b63e1081ebbc.css">',this.constants+='<div id="gist90040214" class="gist">\n    <div class="gist-file">\n      <div class="gist-data">\n        <div class="js-gist-file-update-container js-task-list-container file-box">\n  <div id="file-test-cpp" class="file">\n    \n\n  <div itemprop="text" class="blob-wrapper data type-c">\n      <table class="highlight tab-size js-file-line-container" data-tab-size="8">\n      <tr>\n        <td id="file-test-cpp-L1" class="blob-num js-line-number" data-line-number="1"></td>\n        <td id="file-test-cpp-LC1" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>StateReceiver.h<span class="pl-pds">&gt;</span></span></td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L2" class="blob-num js-line-number" data-line-number="2"></td>\n        <td id="file-test-cpp-LC2" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>CommandSender.h<span class="pl-pds">&gt;</span></span></td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L3" class="blob-num js-line-number" data-line-number="3"></td>\n        <td id="file-test-cpp-LC3" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>DebugSender.h<span class="pl-pds">&gt;</span></span></td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L4" class="blob-num js-line-number" data-line-number="4"></td>\n        <td id="file-test-cpp-LC4" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L5" class="blob-num js-line-number" data-line-number="5"></td>\n        <td id="file-test-cpp-LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-k">using</span> <span class="pl-k">namespace</span> <span class="pl-en">vss</span><span class="pl-k">;</span></td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L6" class="blob-num js-line-number" data-line-number="6"></td>\n        <td id="file-test-cpp-LC6" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L7" class="blob-num js-line-number" data-line-number="7"></td>\n        <td id="file-test-cpp-LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>(<span class="pl-k">int</span> argc, <span class="pl-k">char</span>** argv){</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L8" class="blob-num js-line-number" data-line-number="8"></td>\n        <td id="file-test-cpp-LC8" class="blob-code blob-code-inner js-file-line">    IStateReceiver *stateReceiver = <span class="pl-k">new</span> <span class="pl-c1">StateReceiver</span>();</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L9" class="blob-num js-line-number" data-line-number="9"></td>\n        <td id="file-test-cpp-LC9" class="blob-code blob-code-inner js-file-line">    ICommandSender *commandSender = <span class="pl-k">new</span> <span class="pl-c1">CommandSender</span>();</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L10" class="blob-num js-line-number" data-line-number="10"></td>\n        <td id="file-test-cpp-LC10" class="blob-code blob-code-inner js-file-line">    IDebugSender *debugSender = <span class="pl-k">new</span> <span class="pl-c1">DebugSender</span>();</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L11" class="blob-num js-line-number" data-line-number="11"></td>\n        <td id="file-test-cpp-LC11" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L12" class="blob-num js-line-number" data-line-number="12"></td>\n        <td id="file-test-cpp-LC12" class="blob-code blob-code-inner js-file-line">    stateReceiver-&gt;<span class="pl-c1">createSocket</span>();</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L13" class="blob-num js-line-number" data-line-number="13"></td>\n        <td id="file-test-cpp-LC13" class="blob-code blob-code-inner js-file-line">    commandSender-&gt;<span class="pl-c1">createSocket</span>(TeamType::Yellow);</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L14" class="blob-num js-line-number" data-line-number="14"></td>\n        <td id="file-test-cpp-LC14" class="blob-code blob-code-inner js-file-line">    debugSender-&gt;<span class="pl-c1">createSocket</span>(TeamType::Yellow);</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L15" class="blob-num js-line-number" data-line-number="15"></td>\n        <td id="file-test-cpp-LC15" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L16" class="blob-num js-line-number" data-line-number="16"></td>\n        <td id="file-test-cpp-LC16" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span>(<span class="pl-c1">true</span>){</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L17" class="blob-num js-line-number" data-line-number="17"></td>\n        <td id="file-test-cpp-LC17" class="blob-code blob-code-inner js-file-line">        State state;</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L18" class="blob-num js-line-number" data-line-number="18"></td>\n        <td id="file-test-cpp-LC18" class="blob-code blob-code-inner js-file-line">        Command command;</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L19" class="blob-num js-line-number" data-line-number="19"></td>\n        <td id="file-test-cpp-LC19" class="blob-code blob-code-inner js-file-line">        Debug debug;</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L20" class="blob-num js-line-number" data-line-number="20"></td>\n        <td id="file-test-cpp-LC20" class="blob-code blob-code-inner js-file-line">        </td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L21" class="blob-num js-line-number" data-line-number="21"></td>\n        <td id="file-test-cpp-LC21" class="blob-code blob-code-inner js-file-line">        state = stateReceiver-&gt;<span class="pl-c1">receiveState</span>(FieldTransformationType::None);</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L22" class="blob-num js-line-number" data-line-number="22"></td>\n        <td id="file-test-cpp-LC22" class="blob-code blob-code-inner js-file-line">        commandSender-&gt;<span class="pl-c1">sendCommand</span>(command);</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L23" class="blob-num js-line-number" data-line-number="23"></td>\n        <td id="file-test-cpp-LC23" class="blob-code blob-code-inner js-file-line">        debugSender-&gt;<span class="pl-c1">sendDebug</span>(debug);</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L24" class="blob-num js-line-number" data-line-number="24"></td>\n        <td id="file-test-cpp-LC24" class="blob-code blob-code-inner js-file-line">    }</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L25" class="blob-num js-line-number" data-line-number="25"></td>\n        <td id="file-test-cpp-LC25" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L26" class="blob-num js-line-number" data-line-number="26"></td>\n        <td id="file-test-cpp-LC26" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-test-cpp-L27" class="blob-num js-line-number" data-line-number="27"></td>\n        <td id="file-test-cpp-LC27" class="blob-code blob-code-inner js-file-line">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n  </div>\n</div>\n'}}}},vVJV:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=n("sB8e"),l=n("Jo5z"),i=!1;var a=function(e){i||n("UqTQ")},d=n("VU/8")(s.a,l.a,!1,a,null,null);d.options.__file="pages/doc-samples-cpp.vue",t.default=d.exports},vyvD:function(e,t,n){"use strict";var s=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("li",{staticClass:"li-without-dot"},e._l(e.menu,function(t){return n("ul",{key:t.id},[n("b",[n("nuxt-link",{attrs:{to:t.link}},[e._v(" "+e._s(t.id)+" "+e._s(t.label)+" ")])],1),void 0!==t.menu?n("li",{staticClass:"li-without-dot"},e._l(t.menu,function(t){return n("ul",{key:t.id},[n("nuxt-link",{attrs:{to:t.link}},[e._v(" "+e._s(t.id)+" "+e._s(t.label)+" ")]),void 0!==t.menu?n("li",{staticClass:"li-without-dot"},e._l(t.menu,function(t){return n("ul",{key:t.id},[n("nuxt-link",{attrs:{to:t.link}},[e._v(" "+e._s(t.id)+" "+e._s(t.label)+" ")])],1)})):e._e()],1)})):e._e()])}))])};s._withStripped=!0;var l={render:s,staticRenderFns:[]};t.a=l},zzPi:function(e,t,n){(e.exports=n("FZ+f")(!1)).push([e.i,"",""])}});